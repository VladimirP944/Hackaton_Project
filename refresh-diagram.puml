@startuml
abstract class User {
- name : String
- address : String
- birthdate : LocalDate
- id : UUID
- type : UserType
}

enum UserType {
ADMIN,
VOLUNTEER,
DISPLACED_PERSON
}

class Admin extends User {
}

class Volunteer extends User {
- homes : List<LivingLocation>
- businessSpaces : List<BusinessLocation>
- jobs : List<Job>
- foodServices : List<Food>
- schools : List<Education>
- record : String
- identityCard : String
}

class DisplacedPerson extends User {
- numberOfPeople : int
- lookingForJob : boolean
- lookingForShelter : boolean
- lookingForBusinessLocation : boolean
- lookingForFood : boolean
- lookingForMedicalAssistance : boolean
- lookingToSellProducts : boolean
- documents : String
- pets : boolean
}

abstract class Service {
- name : String
- address : String
- type : ServiceType
- id : UUID
- description : String
}

enum ServiceType {
SHELTER,
BUSINESS_LOCATION,
JOB,
MEDICAL,
FOOD,
EDUCATION
}

class Location extends Service {
- daysAvailable : int
- capacity : int
- petFriendly : boolean
- locationType : LocationType
}

enum LocationType {
SHELTER,
BUSINESS,
HOUSE
}

class Job extends Service {
- educationalRequirements : List<String>
- languageRequirements : List<String>
}

class MedicalAssistance extends Service {
- assistanceType : MedicalAssistanceType
}

enum MedicalAssistanceType {
GENERAL,
PEDIATRIC,
DENTISTRY,
EMERGENCY
}

class Food extends Service {
- menu : List<String>
- foodType : List<FoodType>
}

enum FoodType {
NORMAL,
VEGAN,
VEGETARIAN,
HALAL,
KOSHER
}

class Education extends Service {
- educationTypes : List<EducationType>
}

enum EducationType {
KINDERGARTEN,
PRIMARY,
MIDDLE,
HIGH_SCHOOL,
COLLEGE
}

EducationType --> Education
LocationType --> Location
FoodType --> Food
ServiceType --> Service
UserType --> User
MedicalAssistanceType --> MedicalAssistance
Volunteer --o Service

@enduml